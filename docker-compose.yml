x-app: &default-app
  build:
    context: "./rails"
  depends_on:
    - "postgres"
    - "redis"
  env_file:
    - ".env"
  restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
  stop_grace_period: "3s"
  tty: true

services:
  rails:
    <<: *default-app
    ports:
      - "${DOCKER_WEB_PORT_FORWARD:-127.0.0.1:3000}:${PORT:-3000}"
    profiles: ["rails"]
    volumes:
      - "${DOCKER_WEB_VOLUME:-./public:/rails/public}"

  postgres:
    image: "postgres:15.1-alpine" # or "postgres:15.1-bullseye"
    # container_name: xxx 
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      # POSTGRES_DB: "${POSTGRES_DB}"
    profiles: ["postgres"]
    restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
    stop_grace_period: "3s"
    # ports:
    #   - "5432:5432"
    # command:
    #   "postgres -c 'max_connections=500'"
    volumes:
      - "postgres-data:/var/lib/postgresql/data"

  redis:
    image: "redis:7.0-alpine"
    profiles: ["redis"]
    restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
    stop_grace_period: "3s"
    volumes:
      - "redis-data:/data"

  worker:
    <<: *default-app
    command: "bundle exec sidekiq -C config/sidekiq.yml"
    entrypoint: []
    profiles: ["worker"]

  cable:
    <<: *default-app
    command: "puma -p 28080 cable/config.ru"
    entrypoint: []
    ports:
      - "${DOCKER_CABLE_PORT_FORWARD:-127.0.0.1:28080}:28080"
    profiles: ["cable"]

  mkdocs:
    build:
      context: "./mkdocs"
    depends_on:
      - "rails"
    env_file:
      - ".env"
    restart: "${DOCKER_RESTART_POLICY:-unless-stopped}"
    stop_grace_period: "3s"
    tty: true
    profiles: ["mkdocs"]
    command: "sleep 3"
    volumes:
      - "./public/blogs:/mkdocs/blogs"

volumes:
  postgres-data: {}
  redis-data: {}
